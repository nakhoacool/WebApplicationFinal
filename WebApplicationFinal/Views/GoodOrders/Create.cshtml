@model WebApplicationFinal.Models.GoodOrder

@{
    ViewBag.Title = "Create";
}

@functions{
    public static string generateOID()
    {
        //generate random letter

        Random random = new Random();
        char letter = (char)('A' + random.Next(0, 26));
        return "G" +letter+DateTime.Now.ToString("mmss");
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Purchase</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="OID" value="@generateOID()" readonly />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AID, "AID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GID, "GID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" id="goodQuantity" name="Quantity" value="1" min="1" max="@ViewBag.Quantity" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.OrderDate, new { @type = "datetime-local", @Value = DateTime.Now.ToString("s") })
                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="hidden" id="goodPrice" value="@ViewBag.Price" />
                <input type="text" name="TotalPrice" id="totalPrice" value="@ViewBag.Price" readonly/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="PaymentMethod" class="form-control">
                    <option value="Cash">Cash</option>
                    <option value="Credit Card">Credit Card</option>
                    <option value="Momo">Momo</option>
                    <option value="Paypal">Paypal</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Purchase" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $("#goodQuantity").change(function () {
                var quantity = $("#goodQuantity").val();
                var price = $("#goodPrice").val();
                var totalPrice = quantity * price;
                $("#totalPrice").val(totalPrice);
            });
        });
    </script>
}
